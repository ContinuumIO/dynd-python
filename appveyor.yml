# TODO: How to automatically use the version string
#       produced by the build?
version: 0.6.6.{build}

# branches to build
branches:
  only:
    - master

# Do not build on tags (GitHub only)
skip_tags: true

# Operating system (Using default OSS config which includes MSVC 2015)
#os: Visual Studio 2015

matrix:
  fast_finish: true     # immediately finish build once one of the jobs fails.

environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "x86_64"
      MSVC: 2015
    - PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "x86"
      MSVC: 2013
    - PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "x86_64"
      MSVC: 2013

install:
  - md libraries
  - cd libraries
  - git clone https://github.com/libdynd/libdynd.git
  - cd ..
  - dir C:\
  - dir "C:\Program Files\Microsoft SDKs\Windows"
  - dir "C:\Program Files (x86)\Microsoft Visual*"
  - cmake --version
  - ps: Start-FileDownload "https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-$env:PYTHON_ARCH.exe" C:\Miniconda.exe; echo "Finished downloading miniconda"
  - cmd: C:\Miniconda.exe /S /D=C:\Py
  - C:\Py\Scripts\conda config --set always_yes yes
  - C:\Py\Scripts\conda update conda
  - C:\Py\Scripts\conda install pip numpy cython setuptools
  - C:\Py\Scripts\pip install wheel
  - C:\Py\python -c "import struct; print(struct.calcsize('P') * 8)"
  - SET PATH=C:\Py;C:\Py\Scripts;%PATH%

build_script:
  - C:\Py\python setup.py bdist_wheel --msvc %MSVC%

test_script:
  - cd dist
  - FOR /F "delims=" %%i IN ('dir /b *.whl') DO set WHL=%%i
  - pip install %WHL%
  - python -c "import dynd;dynd.test(exit=True)"
  - cd ..

artifacts:
  - path: dist\*


