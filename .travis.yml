sudo: false

env:
  global:
    secure: UimNDqpXAvtGTLBKAKdq3SPFT8615R/7M7wxtgfyvUOC7LXoqRIcXSXryiXD5CCmRsgATG13qAlu6UY8ve5xCU5xFtLIK0gy8ANyc+ZRZjO9UGVZU9UVswbADvEC+K5RwZTGjCnmfe72dv47NtWW1ZYsH/87WK4dwvGP3fIWNR8=

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - kalakris-cmake
    packages:
    - gcc-4.9
    - g++-4.9
    - cmake

cache:
  directories:
  - $HOME/.cache/pip
  - $HOME/dynd-python/build

before_install:
- export CC=gcc-4.9
- export CXX=g++-4.9

matrix:
  include:
  - language: C++
    compiler: gcc
    env:
      - Miniconda_OS=Linux
      - Miniconda_ver=2
  - language: C++
    compiler: gcc
    env:
      - Miniconda_OS=Linux
      - Miniconda_ver=3
  - language: python
    python: 3.5
    compiler: gcc
    install:
      # Use the version of numpy that comes preinstalled.
      - travis_retry pip install --install-option="--no-cython-compile" Cython==0.24
      - python -c "from __future__ import print_function; import numpy; print(numpy.__version__)"
      - git clone --depth=1 https://github.com/libdynd/libdynd.git
      - python setup.py install --target=ndt -j2
      - rm -rf build dist dynd.ndt.egg-info
      - echo dynd.ndt >> requirements.txt
      - python setup.py install --target=nd -j2
    script:
      - pushd ..
      - python -m dynd.ndt.test
      - python -m dynd.nd.test
      - popd
  - language: objective-c
    os: osx
    compiler: clang
    osx_image: xcode6.4
    env:
      - Miniconda_OS=MacOSX
      - Miniconda_ver=2
    addons:
    before_install:
  - language: objective-c
    os: osx
    compiler: clang
    osx_image: xcode6.4
    env:
      - Miniconda_OS=MacOSX
      - Miniconda_ver=3
    addons:
    before_install:

script:
  - wget https://repo.continuum.io/miniconda/Miniconda${Miniconda_ver}-latest-${Miniconda_OS}-x86_64.sh
  - bash Miniconda${Miniconda_ver}-latest-${Miniconda_OS}-x86_64.sh -b
  - export PATH=$HOME/miniconda${Miniconda_ver}/bin:$PATH
  - conda install --yes conda-build jinja2
  - if [ $TRAVIS_BRANCH == "master" ] && [ $TRAVIS_PULL_REQUEST == "false" ]; then conda install --yes anaconda-client; fi
  - conda build conda/ndt.recipe --channel dynd/channel/dev
  - rm -rf build dist dynd.ndt.egg-info
  - echo dynd.ndt >> requirements.txt
  - conda build conda/nd.recipe --channel dynd/channel/dev
  - conda install --yes numpy libdynd --channel dynd/channel/dev
  - conda install $(conda build --output conda/ndt.recipe | grep bz2)
  - conda install $(conda build --output conda/nd.recipe | grep bz2)

after_success:
  - if [ $TRAVIS_BRANCH == "master" ] && [ $TRAVIS_PULL_REQUEST == "false" ]; then anaconda --token $ANACONDA_TOKEN upload $(conda build --output conda/ndt.recipe) --user dynd --channel dev; fi
  - if [ $TRAVIS_BRANCH == "master" ] && [ $TRAVIS_PULL_REQUEST == "false" ]; then anaconda --token $ANACONDA_TOKEN upload $(conda build --output conda/nd.recipe) --user dynd --channel dev; fi

notifications:
  email: false
  flowdock: b08b3ba4fb86fa48121e90b5f67ccb75
  on_success: change
  on_failure: always
