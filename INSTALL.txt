
PREREQUISITES
=============

This library requires a C++98 compiler. [TODO: pick supported
compiler versions and list them here. Should set up build/test
infrastructure for supported configurations.]

 * dynamicndarray, included as a git submodule

Before configuring the build with CMake, initialize the git submodule
with the following commands from the root blaze directory:

    $ git submodule init
    $ git submodule update

 * Python 2.7
 * Cython >= 0.16
 * Numpy >= 1.6

 * CMake >= 2.6
 * Boost (header-only, doesn't require that any libraries be built)

The following libraries/projects are included with the code:

 * Google Test 1.6 (included in project)

CONFIGURATION OPTIONS
=====================

These are some options which can be configured by calling
CMake with an argument like "-DCMAKE_BUILD_TYPE=Release".

CMAKE_BUILD_TYPE
    Which kind of build, such as Release, RelWithDebugInfo, Debug.
PYTHON_PACKAGE_INSTALL_PREFIX
    Where the Python module should be installed.
CMAKE_INSTALL_PREFIX
    The prefix for installing shared libraries such as
    libdynamicndarray.so.

BUILD AND INSTALL INSTRUCTIONS
==============================

CMake is the only supported build system for this library. This
may expand in the future, but for the time being this is the
only one which will be kept up to date.

Windows
-------

    1.  Make sure the dynamicndarray library submodule is
        set up as described in the prerequisites section.

    2a. Run CMake-gui. For the 'source code' folder, choose the
        blaze folder which is the root of the project.
        For the 'build the binaries' folder, create a 'build'
        subdirectory so that your build is isolated from the
        source code files. Visual Studio 2010 is recommended,
        and will work even though Python 2.7 is built with
        2008. Double-click on the generated blaze.sln
        to open Visual Studio.

    2b. Start a command prompt window, and navigate to the
        blaze folder which is the root of the project.
        The execute the following commands:

        D:\blaze>mkdir build
        D:\blaze>cd build
        D:\blaze\build>cmake -G "Visual Studio 10 Win64" ..
           [output, check it for errors]
        D:\blaze\build>start blaze.sln
           [Visual Studio should start and load the project]

    3. The RelWithDebInfo configuration is recommended for most
       purposes. The Debug configuration tries to link against
       a debug build of Python, even though that isn't necessarily
       desired.

    4. To install the Python module, explicitly build the INSTALL
       target.

Linux
-----

    Make sure the dynamicndarray library submodule is
    set up as described in the prerequisites section.

    Execute the following commands from the blaze folder,
    which is the root of the project:
      $ mkdir build
      $ cd build
      $ cmake ..
      $ make
      $ make install # or "sudo make install"

Mac OS X
--------

    Make sure the dynamicndarray library submodule is
    set up as described in the prerequisites section.

    Execute the following commands from the blaze folder,
    which is the root of the project:
      $ mkdir build
      $ cd build
      $ cmake -DCMAKE_OSX_ARCHITECTURES=i386 -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_FLAGS="-stdlib=libc++"  ..
      $ make
      $ make install # or "sudo make install"


